@typeparam TResult

<div class="ntd-overlay @(IsVisible ? "visible" : "")" @onclick="HandleOverlayClick">
    <div class="ntd-container" @onclick:stopPropagation="true">
        <div class="ntd-header">
            <h2 class="ntd-title">@Title</h2>
            @if (ShowCloseButton)
            {
                <button class="ntd-btn-close" @onclick="HandleCancel">Ã—</button>
            }
        </div>
        
        <div class="ntd-body">
            @ChildContent
        </div>
        
        @if (FooterContent != null)
        {
            <div class="ntd-footer">
                @FooterContent
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public bool ShowCloseButton { get; set; } = true;
    [Parameter] public bool CloseOnBackdropClick { get; set; } = true;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? FooterContent { get; set; }
    [Parameter] public EventCallback<TResult?> OnResult { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    protected async Task HandleCancel()
    {
        await OnCancel.InvokeAsync();
    }

    protected async Task HandleResult(TResult? result)
    {
        await OnResult.InvokeAsync(result);
    }

    private async Task HandleOverlayClick()
    {
        if (CloseOnBackdropClick)
        {
            await HandleCancel();
        }
    }
}